"""
Django settings for guiwork project.

Generated by 'django-admin startproject' using Django 4.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=wnaf35=wp*lnj++e4&8=+%zpw$zb1*9k#gx-b*zlo7+nitt&k'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['di.siadev.kr', 'dev-cluster.sia-service.kr']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'training_helper',
    'dataset_viewer',
    'common',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'guiwork.urls'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'standard': {
            'format': '%(asctime)s [%(levelname)s] %(name)s: %(message)s'
        },
    },
    'handlers': {
        'default': {
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': '/project/DjangoLog/django-log.log',
            'maxBytes': 1024*1024*5, # 5 MB
            'backupCount': 5,
            'formatter':'standard',
        },  
        'request_handler': {
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': '/project/DjangoLog/django-log.log',
            'maxBytes': 1024*1024*5, # 5 MB
            'backupCount': 5,
            'formatter':'standard',
        },
    },
    'loggers': {
        '': {
            'handlers': ['default'],
            'level': 'DEBUG',
            'propagate': True
        },
        'django.request': {
            'handlers': ['request_handler'],
            'level': 'DEBUG',
            'propagate': False
        },
    }
}

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'guiwork.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

ROOT_STORAGE_PATH = "/nas/workspace/igor/HAT"


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MODELS_CONFIG_FILE_PATH = "/project/HAT-UI/guiwork/models_config.json"
MODELS_TRAIN_FILES = {
    "FairMOT": "/nas/workspace/igor/HAT/Tracker_FairMOT/src/train.py"
}

MODELS_LOG_PATH = {
    "FairMOT": "/nas/workspace/igor/HAT/models/Tracker_FairMOT/src/train.py",
    "YOLOX": "/nas/workspace/igor/HAT/models/YOLOX-BYTE/tools/train.py",
    "EfficientDet": "/nas/workspace/igor/HAT/models/EfficientDet-SORT/tools/lazyconfig_train_net.py"
}

SUBPROCESS_EXE = {
    "training_monitoring": "/project/HAT-UI/guiwork/training_helper/training_monitoring.py",
    "dataset_building": "/project/HAT-UI/guiwork/dataset_viewer/dataset_builder.py",
    "dataset_monitoring": "/project/HAT-UI/guiwork/dataset_viewer/dataset_monitoring.py"
}

CONVERSION_TOOLS = {
    "MOT_TO_YOLOX_COCO": "/nas/workspace/igor/HAT/models/YOLOX-BYTE/tools/convert_to_coco.py",
    "MOT_TO_FairMOT": "/nas/workspace/igor/HAT/models/Tracker_FairMOT/src/gen_labels_fairmot.py",
    "MOT_TO_EfficientDET_COCO": "/nas/workspace/igor/HAT/models/EfficientDet-SORT/tools/convert_to_coco.py"
}

EFFICIENT_DET_CONFIG = "/nas/workspace/igor/HAT/models/EfficientDet-SORT/configs/efficientdet/efficientdet_D5_1x.py"

DEFAULT_NUM_CLASSES = 6

LOGS_PATH_NAME = "logs_test"

ANACONDA_PYTHON_EXE = "/root/anaconda3/bin/python3"

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = False
